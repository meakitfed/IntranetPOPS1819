

@(Html.Kendo().Grid<IntranetPOPS1819.Models.Conge>
    ()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.Id);
        columns.Bound(c => c.Debut);
        columns.Bound(c => c.Fin);
        columns.Command(command => { command.Custom(" Valider").IconClass("fas fa-check").HtmlAttributes(new { @class = "btn btn-success" }).Click("Valider"); command.Custom(" Refuser").IconClass("fas fa-times").HtmlAttributes(new { @class = "btn btn-danger" }).Click("Refuser"); /*command.Destroy().Text(" Valider").IconClass("fas fa-check").HtmlAttributes(new { @class = "btn btn-success"}); command.Destroy().Text(" Valider").IconClass("fas fa-check").HtmlAttributes(new { @class = "btn btn-danger" });*/ }).Width(180);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine)
    .DisplayDeleteConfirmation(false))
    .Scrollable()
    .Events(events =>
    {
        events.DataBound("onDataBound");
        events.DataBinding("onDataBinding");
        events.SaveChanges("onSaveChanges");
    })
    .DataSource(dataSource => dataSource
    .Ajax()
    .Model(model => model.Id(p => p.Id))
    .Read(read => read.Action("Conges_Read", "ChefDeService"))
    .Create(create => create.Action("Conges_Create", "ChefDeService"))
    .Update(update => update.Action("Conges_Validation", "ChefDeService"))
    .Destroy(destroy => destroy.Action("Conges_Validation", "ChefDeService"))
    )
    )



    <script type="text/javascript">

        function showDetails(e) {
            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            console.log(row.closest(".k-button"));
            console.log(row.closest(".k-button").attr("id"));
            grid.removeRow(row);

        }
        
    </script>

    <script type="text/javascript">
        function Valider(e) {
            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            grid.removeRow(row);
            console.log(this);
            console.log(dataItem);
            $.ajax({
                url: 'Conges_Validation',
                data: {
                    nb: dataItem.Id,
                    accepter: true
                }
            }).done(function () {
                alert('Added');
            });
        }

        function Refuser(e) {
            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            grid.removeRow(row);
            console.log(dataItem);
            $.ajax({
                url: 'Conges_Validation',
                data: {
                    nb: dataItem.Id,
                    accepter: false
                }
            }).done(function () {
                alert('Added');
            });
        }
    </script>

    <script>
        kendo.culture("br-FR");
        function onDataBound(e) {
            //Implement the event handler for DataBound
        }

        function onDataBinding(e) {
            //Implement the event handler for DataBinding
        }

        function onSaveChanges(e) {
            //Implement the event handler for SaveChanges
        }</script>

    <style>

        .btn-success {
            color: #fff;
            background-color: #28a745;
            border-color: #28a745;
        }

            .btn-success:hover {
                color: #fff;
                background-color: #218838;
                border-color: #1e7e34;
            }

            .btn-success:focus, .btn-success.focus {
                box-shadow: 0 0 0 0.2rem rgba(72, 180, 97, 0.5);
            }

            .btn-success.disabled, .btn-success:disabled {
                color: #fff;
                background-color: #28a745;
                border-color: #28a745;
            }

            .btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active,
            .show > .btn-success.dropdown-toggle {
                color: #fff;
                background-color: #1e7e34;
                border-color: #1c7430;
            }

                .btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:disabled):not(.disabled).active:focus,
                .show > .btn-success.dropdown-toggle:focus {
                    box-shadow: 0 0 0 0.2rem rgba(72, 180, 97, 0.5);
                }

        .btn-danger {
            color: #fff;
            background-color: #dc3545;
            border-color: #dc3545;
        }

            .btn-danger:hover {
                color: #fff;
                background-color: #c82333;
                border-color: #bd2130;
            }

            .btn-danger:focus, .btn-danger.focus {
                box-shadow: 0 0 0 0.2rem rgba(225, 83, 97, 0.5);
            }

            .btn-danger.disabled, .btn-danger:disabled {
                color: #fff;
                background-color: #dc3545;
                border-color: #dc3545;
            }

            .btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled):not(.disabled).active,
            .show > .btn-danger.dropdown-toggle {
                color: #fff;
                background-color: #bd2130;
                border-color: #b21f2d;
            }

                .btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:disabled):not(.disabled).active:focus,
                .show > .btn-danger.dropdown-toggle:focus {
                    box-shadow: 0 0 0 0.2rem rgba(225, 83, 97, 0.5);
                }
    </style>
