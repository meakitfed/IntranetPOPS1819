@model IntranetPOPS1819.ViewModel.CongesViewModel
@{
    ViewBag.Title = "Profil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="https://afeld.github.io/emoji-css/emoji.css" rel="stylesheet">
</head>
<body>
    @Html.Partial("../Shared/Navbar")
    <div class="row">









        <div id="recapConges" class="col-lg-2 table-bordered">
            <h3><font size="4">Récapitulatif Congés</font></h3>
            <br />

            <p>Déjà pris cette année : @Model._Collaborateur.GetNombreCongesPrisCetteAnnee() jours</p>
         
            <div id="a-prendre">
                <p>A prendre : @Model._Collaborateur.CongesRestants jours</p>
            </div>

            <div class="listbox-area">
                <div id="demandesAttente" class="left-area">
                    <span id="ss_elem">
                        Demandes en attente : @Model._Collaborateur.GetNombreCongesEnAttente() jours
                    </span>
                    <select class=" table-bordered"
                        id="conges_enattente_list"
                        tabindex="0"
                        role="listbox"
                        aria-labelledby="conges_enattente"
                        size="5">

                        @foreach (var c in Model._Collaborateur.Conges)
                        {
                            if (c.Statut == StatutConge.EnCours  ||  c.Statut == StatutConge.ValideChef)
                            {
                                <option id="@c.Id" role="option">
                                    @c.Debut.ToString("dd/MM/yyyy") - @c.GetDuree() jours : @c.Statut
                                </option>
                            }
                        }



                    </select>
                    
                    <button id="supprimer" type="button" class="btn btn-secondary disabled">Supprimer cette demande</button>
                </div>
            </div>



            <br />
            <br />
            <br />
            <br />

            @if (@Model._Collaborateur.GetNombreCongesValidesFuturs() != 0)
            {
                <div class="listbox-area">
                    <div class="left-area">
                        <span id="ss_elem">
                            Demandes validées : @Model._Collaborateur.GetNombreCongesValidesFuturs() jours
                        </span>
                        <ul class="list-group">

                            @foreach (var c in Model._Collaborateur.Conges)
                            {
                                if (c.Statut == StatutConge.Valide)
                                {
                                    <li id="@c.Id">
                                        @c.Debut.ToString("dd/MM/yyyy") - @c.GetDuree() jours : @c.Statut
                                    </li>
                                }
                            }



                        </ul>
                    </div>
                </div>

            }
            else
            {
                <p>Aucune demande validée pour le moment <i class="em em-thinking_face"></i> </p>
            }

            <br />




        </div>
















        <div class="col-lg-8 table-bordered text-center">
            <h2>Faire une demande de congés</h2>
            <div id="example" style="text-align: center;">
                <div class="demo-section k-content wide" style="display: inline-block;">

                    <h4>Selectionnez une plage</h4>
                    @(Html.Kendo().MultiViewCalendar()
                                                .Name("multiViewCalendar")
                                                .Selectable("range")
                                                .MonthTemplate(month => month.Content("# if ($.inArray(+data.date, enAttente) != -1) { #" +
                                        "<div class=\"en-attente\"></div>" +
                                        "# } else if ($.inArray(+data.date, estValide) != -1) {#" +
                                        "<div class=\"valide\"></div>" +
                                        "# } #" +
                                        "#= data.value #")
                                    )

                    )
                </div>
            </div>
            @*.MonthTemplate(month => month.Content("# if ($.inArray(+data.date, enAttente) != -1) { #" +
        "<div class=\"enattente\" font size=\"1\">conge en attente de validation</div>" +
        "# } #" +
        "#= data.value #")*@


            @*.MonthTemplate(month => month.Content(   "# if($.inArray(+data.date, enAttente) != -1){ #" +
            "<div class='enattente'>#= data.value #</div>"
        +"#} elseif($.inArray(+data.date, refusee) != -1){#"
            +"<div class='refusee'>#= data.value #</div> "
        +"#} elseif($.inArray(+data.date, validee) != -1){#"
            +"<div class='validee'>#= data.value #</div> "
        +"#else {#"
            +"#= data.value #"
        +"# } #")*@
            <br />


            <button id="demanderConge" type="button" class="btn btn-primary">Je veux ce congé !</button>

            <br />

            <div id="retourConge"></div>

            <br />

            @*@using (Html.BeginForm())
            {
                <div>
                    @Html.LabelFor(Model => Model._Conge.Debut)
                    @Html.EditorFor(Model => Model._Conge.Debut, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model._Conge.Debut)
                </div>
                <div>
                    @Html.LabelFor(Model => Model._Conge.Fin)
                    @Html.EditorFor(Model => Model._Conge.Fin, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model._Conge.Fin)
                </div>
                <div>
                    @Html.LabelFor(Model => Model._Conge.Type)
                    @Html.TextBoxFor(Model => Model._Conge.Type)
                    @Html.ValidationMessageFor(Model => Model._Conge.Type)
                </div>
                <input type="submit" value="Demander congé" />
            }*@

        </div>



















        <div class="col-lg-2 table-bordered">
            <h2>Aujourd'hui : </h2>
            <h4>@DateTime.Today.ToString("dd/MM/yyyy")</h4>
            <br />
            <h3><font size="4">Informations du service</font></h3>
            <br />

            <p>Nombre de demandes en attente dans le service : @Model._Collaborateur.Service.GetNombreCongesEnAttente() </p>
            <br />
            <p>Nombre de collaborateurs en congés dans le service : @Model._Collaborateur.Service.GetNombreCollaborateursEnConges() / @Model._Collaborateur.Service.Collaborateurs.Count (@(@Model._Collaborateur.Service.GetNombreCollaborateursEnConges() / @Model._Collaborateur.Service.Collaborateurs.Count)%)</p>



        </div>
</body>

<script>
    

    var rawAttente = @Html.Raw(Json.Encode(Model._Collaborateur.GetTousJoursCongesEnAttente() ));
    var enAttente = rawAttente.map(x => parseInt(x.substring(6, 19)))

    var rawValide = @Html.Raw(Json.Encode(Model._Collaborateur.GetTousJoursCongesValides() ));
    var estValide = rawValide.map(x => parseInt(x.substring(6, 19)))

    var rawValide = @Html.Raw(Json.Encode(Model._Collaborateur.GetTousJoursCongesValides() ));
    var estValide = rawValide.map(x => parseInt(x.substring(6,19)))

    @*
    var temp = @Html.Raw(Json.Encode(Model._Collaborateur.GetJSONTousJoursCongesEnAttente() ));
    var ouu = temp.map(x => [parseInt(x.substring(1, 5)), parseInt(x.substring(6, 8)), parseInt(x.substring(9, 11))])
    var enAttente = ouu.map(x => +new Date(x[0], x[1], x[2]))
    *@

    console.log(rawAttente)
    console.log(enAttente)


    console.log(rawValide)
    console.log(estValide)
    @*
    //console.log(babu)
    console.log(temp)
    console.log(ouu)
    //console.log(ouuu)*@
    
    //TODO TESTER TOUT CA

    function prepareElements() {

        var today = new Date();
        var multiViewCalendar = $("#multiViewCalendar").data("kendoMultiViewCalendar");
        multiViewCalendar.value(today);

        $("#conges_enattente_list").change(function () {
            if ($(this).val() != 0) {
                $("#supprimer").removeClass('disabled')
            }
        })

        $("#supprimer").click(function () {
            if (!$(this).hasClass("disabled")) {
                $.post("SupprimerConge", { id: $("#conges_enattente_list").children(":selected").attr("id") }, function (data) {
                    if (data == 0) {

                        alert("Ok ça roule")
                        $("#demandesAttente").load(window.location.href + " #demandesAttente");
                        $("#a-prendre").load(window.location.href + " #a-prendre");

                    }
                });
            }
        })

        $("#demanderConge").click(function () {
            var multiViewCalendar = $("#multiViewCalendar").data().kendoMultiViewCalendar;
            var range = multiViewCalendar.selectRange();
            if (range.start && range.end) {
                var options = { year: 'numeric', month: 'long', day: 'numeric' };

                console.log(typeof (range.start.toLocaleDateString(options)))
                console.log(range.start)
                console.log(range.start.toLocaleDateString(options))

                $.post("DemandeConge", { Debut: range.start.toISOString(), Fin: range.end.toISOString() }, function (data) {
                    if (data == "errorPasAssezDeCongesRestants") $("#retourConge").html("<font color=\"red\">ERREUR : Vous n'avez pas assez de congés disponibles cher collaborateur.</font>")
                    else if (data == "errorChevauchage") $("#retourConge").html("<font color=\"red\">ERREUR : Vous avez demandé un congé qui contient un autre congé.</font>")
                    else if (data == "ok") {
                        $("#retourConge").html("<font color=\"green\">Votre demande de congé a bien été prise en compte.</font>")
                        $("#demandesAttente").load(window.location.href + " #demandesAttente");
                        $("#a-prendre").load(window.location.href + " #a-prendre");
                         var today = new Date();
        var multiViewCalendar = $("#multiViewCalendar").data("kendoMultiViewCalendar");
        multiViewCalendar.value(today);

        $(document).on("change", "#conges_enattente_list",function () {
            if ($(this).val() != 0) {
                $("#supprimer").removeClass('disabled')
                $("#supprimer").addClass('active')
            }
        })

        $(document).on('click', '#supprimer', function (){
            if (!$(this).hasClass("disabled")) {
                $.post("SupprimerConge", { id: $("#conges_enattente_list").children(":selected").attr("id")}, function (data) {
                    alert("Ok ça roule")
                    $("#demandesAttente").load(window.location.href + " #demandesAttente");
                    $("#a-prendre").load(window.location.href + " #a-prendre");
                });
            }
        })

        $("#demanderConge").click(function () {
            var multiViewCalendar = $("#multiViewCalendar").data().kendoMultiViewCalendar;
            var range = multiViewCalendar.selectRange();
            if (range.start && range.end) {
                var options = {year: 'numeric', month: 'long', day: 'numeric' };

                console.log(typeof (range.start.toLocaleDateString(options)))
                console.log(range.start)
                console.log(range.start.toLocaleDateString(options))

                $.post("DemandeConge", { Debut: range.start.toISOString(), Fin: range.end.toISOString() }, function (data) {
                    if (data == "errorPasAssezDeCongesRestants") $("#retourConge").html("<font color=\"red\">ERREUR : Vous n'avez pas assez de congés disponibles cher collaborateur.</font>")
                    else if (data == "errorChevauchage") $("#retourConge").html("<font color=\"red\">ERREUR : Vous avez demandé un congé qui contient un autre congé.</font>")
                    else if (data == "ok") {
                        $("#retourConge").html("<font color=\"green\">Votre demande de congé a bien été prise en compte.</font>")
                        $("#demandesAttente").load(window.location.href + " #demandesAttente");
                        $("#a-prendre").load(window.location.href + " #a-prendre");
                        prepareElements()
                    }

		        });
              
              
            } else {
                alert("Veuillez sélectionner une plage journalière");
            }
        });
                    }

                });


            } else {
                alert("Veuillez sélectionner une plage journalière");
            }
        });
    }



    $(document).ready(function () {

        prepareElements()

    });
    

</script>

<style>

#calendar,
#calendar .k-calendar-view,
#calendar .k-content {
        width: 100%;
                }

    /* Template Days */

    .refuse {
        background: transparent url('@Url.Content("~/Content/images/red.png")') no-repeat 0 50%;
        display: inline-block;
        width: 16px;
        height: 16px;
        vertical-align: middle;
        margin-right: 3px;
    }

    .valide {
        background: transparent url('@Url.Content("~/Content/images/green.png")') no-repeat 0 50%;
        display: inline-block;
        width: 16px;
        height: 16px;
        vertical-align: middle;
        margin-right: 3px;
    }

    .en-attente {
        background: transparent url('@Url.Content("~/Content/images/yellow.jpg")') no-repeat 0 50%;
        display: inline-block;
        width: 16px;
        height: 16px;
        vertical-align: middle;
        margin-right: 3px;
    }



    .list-group{
    max-height: 300px;
    margin-bottom: 10px;
    overflow:scroll;
    -webkit-overflow-scrolling: touch;
}

</style>

</html>
