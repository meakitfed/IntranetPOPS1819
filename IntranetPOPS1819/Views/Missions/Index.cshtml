
@{
    ViewBag.Title = "Missions";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.css">
</head>

@Html.Partial("../Shared/Navbar")
@{
    int id = -1;
    <h2><!--TODO--></h2>
    <div class="container-fluid">
        <div class="row">

            <p class="text-center">Missions actives</p>

            @(Html.Kendo().Grid<IntranetPOPS1819.ViewModel.MissionsViewModel>()
                            .Name("GridMissions")
                            .Columns(columns =>
                            {
                                columns.Bound(m => m.Nom).ClientTemplate(
                                                        "# if (Statut == 1){ #" +
                                                        "<font color=\"ForestGreen\">#=Nom#</font>" +
                                                    "# }else if(Statut == 2){ #" +
                                                        "<font color=\"FireBrick\">#=Nom#</font>" +
                                                    "# }else{ #" +
                                                        "<font color=\"Black\">#=Nom#</font>" + "# } #"
                                                        ); ;
                                columns.Command(command => { command.Edit().Text(" "); command.Destroy().Text(" "); });
                            })
                            .Events(e => e.Edit("grid_edit"))
                            .Scrollable()
                            .ToolBar(toolbar => toolbar.Create())
                            .Editable(editable => editable.Mode(GridEditMode.PopUp))
                            .Sortable()
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Model(model => model.Id(m => m.Id))
                                .Create(update => update.Action("EditingPopup_Create", "Grid"))
                                .Read(read => read.Action("MissionEditing_Read", "Missions"))
                                .Update(update => update.Action("MissionEditing_Update", "Missions"))
                                .Destroy(update => update.Action("EditingPopup_Destroy", "Grid"))
                            )
            )
        </div>
    </div>
    }
            <script>
                function grid_edit(e) {
                    var editForm = e.container;
                    var model = e.model

                    editForm.model = model;
                    editForm.find("label_id").model = model;
                    console.log(model.Id);
                    /*for (var i = 0; i < model.Collaborateurs.length; i++) {
                        document.getElementById("Collaborateurs").innerHTML += '<option id="assigne" value="' + i + '">' + model.Collaborateurs[i].Nom + '</option>';
                    }
                    document.getElementById("listeCollabos").model = model;*/
                }
            </script>
